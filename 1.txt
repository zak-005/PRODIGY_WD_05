const container = document.querySelector('.container');
const search = document.querySelector('.search-box button');
const weatherbox = document.querySelector('.weather-box');
const weatherdetails = document.querySelector('.weather-details');
const error404 = document.querySelector('.not-found');
const cityhide = document.querySelector('.city-hide');

search.addEventListener('click', ()=> {
	
	const APIkey = 'cb7a6fe874df29282c722f5bdd6e2c81';
	const city = document.querySelector('.search-box input').value;
	
	if(city == '')
		return;
	
	fetch('https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${APIkey}').then(response => response.json()).then(json -> {
		
		if(json.cod == '404') {
			cityhide.textContent = city;
			container.style.height = '400px';
			weatherBox.classList.remove('active');
			weatherDetails.classList.remove('activee');
			error404.classList.add('active');
			return;
		}
		
		const image = document.querySelector('.weather-box img');
		const temperature = document.querySelector('.weather-box .temperature');
		const description = document.querySelector('.weather-box .description');
		const humidity = document.querySelector('.weather-details .humidity span');
		const wind = document.querySelector('.weather-details .wind span');
		
		if (cityhide.textContent == city ) {
			return;
		}
		else{
			cityhide.textContent = city;
			
			container.style.height = '555px';
			container.classList.add('active');
			weatherDetails.classList.add('activee');
			error404.classList.remove('active');
			
			setTimeout(() => {
				container.classList.remove('active');
			},2500);
			
		switch(json.weather[0].main){
			case 'Clear':
			image.src ='image/clear.png';
			break;
			case 'Rain':
			image.src = 'image/rain.png';
			case 'Snow':
			image.src ='image/snow.png';
			break;
			case 'Clouds':
			image.src ='image/cloud.png';
			break;
			case 'Mist':
			image.src ='image/mist.png';
			break;
			case 'haze':
			image.src ='image/mist.png';'
			break;
			default:
			img src='image/cloud.png';
		}
		
		temperature.innerHtml = '${parseInt(json.main.temp)}<span>°C</span>';
		description.innerHtml = '${json.weather[0].description}';
		humidity.innerHtml = '${json.main.humidity}%';
		wind.innerHtml = '${parseInt(json.wind.speed)}km/h ';
		
		const infoweather = document.querySelector('.info-weather');
		const infohumidity = document.querySelector('.info-humidity');
		const infowind = document.querySelector('.info-wind');
		
		elCloneInfoWeather.id = 'Clone-info-weather';
		elCloneInfoWeather.classList.add =('active-clone');
		
		elCloneInfoHumidity.id = 'Clone-info-humidity';
		elCloneInfoHumidity.classList.add =('active-clone');
		
		elCloneInfoWind.id = 'Clone-info-wind';
		elCloneInfoWind.classList.add =('active-clone');
		
		setTimeout(() => {
			infoweather.insertAdjacentElement("afterend",elCloneInfoWeather);
			infohumidity.insertAdjacentElement("afterend",elCloneInfoHumidity);
			infowind.insertAdjacentElement("afterend",elCloneInfoWind);
			
		},2200);
		
		const cloneInfoweather = document.querySelectorAll('.info-weather.active-clone');
		const totalcloneinfoweather = cloneinfoweather.length;
		const cloneInfoweatherfirst = cloneInfoweather[0];
		
		const cloneinfohumidity = document.querySelectorAll('.info-humidity .active-clone');
		const cloneinfohumidityfirst = cloneinfohumidity[0];
		
		const cloneinfowind = document.querySelectorAll('.info-wind .active-clone');
		const cloneinfowindfirst = cloneinfowind[0];
		
		if (totalcloneinfoweather > 0 ) {
			cloneInfoweatherfirst.classList.remove('active-clone');
			cloneinfohumidityfirst.classList.remove('active-clone');
			cloneinfowindirst.classList.remove('active-clone');
			
			
		setTimeout(() => {
			cloneInfoweatherfirst.remove();
			cloneinfohumidityfirst.remove();
			cloneInfowindfirst.remove();
		},2200);
			
		}
		
		}

	});
});	







<!DOCTYPE html>

<html lang="en" xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0">
    <title>Weather App using HTML CSS and JavaScript </title>
    <link rel="preconnect" href="https://fonts.googleapis.com">
	<link href='https://cdn.jsdelivr.net/npm/boxicons@latest/css/boxicons.min.css' rel='stylesheet'>
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="i.css">
    
    
   
</head>

<body>
		<div class="container">
			<div class="search-box">
				<i class='bx bxs-map'></i>
				<input type="text" placeholder="enter your location">
				<button class="bx bx-search"></button>
			</div>  
			<p class="city-hide">city hide</p>
		
			<div class="weather-box">
				<div class="box">
					<div class="info-weather">
						<div class="weather">
							<img src="images/cloud.png" >
							<p class="temperature">0<span>°C</span></p>
							<p class="description">Broken Clouds</p>
						</div>
					</div>
				</div>
			</div>
				
				<div class="weather-details">
					<div class="humidity">
						<i class='bx bx-water'></i>
						<div class="text">
							<div class="info-humidity">
								<span>0%</span>
							</div>
							<p>Humidity</p>
						</div>
					</div>
					<div class="wind">
						<i class='bx bx-wind'></i>
						<div class="text">
							<div class="info-wind">
								<span>0km/h</span>
							</div>
							<p>wind Speed</p>
						</div>
					</div>
				</div>
				<div class="not-found">
					<div class="box">
						<img src="images/404.png">
						<p>Oops! location not found!</p>
					</div>
				</div>
					
		</div>
		
		
    <script src="j2.js"></script>
</body>
</html>

@import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
*{
	margin:0;
	padding:0;
	box-sizing: border-box;
	font-family:"Poppins",sans-serif;
}
body{
	display: flex;
	justify-content: center;
	align-items: center;
	min-height:100vh;
	background: url('images/background.jpg');
	background-size: cover;
	background-position:center;
	overflow: hidden;
	
}
.container{
	position: relative;
	width: 400px;
	height:100px;
	background:rgba(255, 255, 255, .1);
	backdrop-filter: blur(30px);
	border:2px solid rgba(255, 255, 255, .2);
	border-radius:16px;
	padding:20px;
	color:#fff;
	transition: height .6s ease;

	
	
}
.search-box{
	position: relative; 
	width: 100%;
	height:55px;
	display:flex;
	align-items:center;

}
.search-box i{
	position: absolute;
	left:10px;
	font-size:20px;
	
}
.search-box input{
	position: absolute;
	width: 100%;
	height:100%;
	background:transparent;
	border:2px solid rgba(255, 255, 255, .2);
	outline: none;
	border-radius:10px;
	font-size:22px;
	text-transform: uppercase;
	padding:0 48px 0 42px;

}
.search-box input::placeholder{
	color:#fff;
	text-transform:capitalize;
	
}
.search-box button{
	position: absolute;
	right:0;
	width: 40px;
	height:100%;
	background:transparent;
	border:none;
	outline: none;
	font-size:20px;
	color:#fff;
	padding:0 48px 0 5px;
	cursor:pointer;
}
.weather.box{
	text-align:center;
	margin: 40px 0;
}
.weather.box,
.weather-details, 
.not-found {
	overflow:hidden;
	visibility:hidden;
}
.weather.box.active,
.weather-details.active, 
.not-found.active {
	visibility: visible;
}
.weather-box .box,
.not-found .box{
	transform: translateY(-100%);
}
.weather-box.active .box,
.not-found .box{
	transform: translateY(0%);
	transition: transform 1s ease;
	transition-delay: 6.s;
}
.weather-box .box .info-weather{
	transform: translateY(-120%);
}
.container.active .weather-box .box .info-weather,
.container.active .weather-details .humidity .info-humidity,
.container.active .weather-details .wind .info-wind {
	transform: translateY(0); 
	transform: transform `1s ease;
}
.weather.box img{
	width:60%;
}
.weather-box .temperature{
	position: relative;
	font-size:64px;
	line-height:1;
	font-weight:700;
	margin:20px 0 6px -30px;
}
.weather-box .temperature span{
	position: absolute;

	font-size:24px;
	margin-left:4px;
}
.weather-box .description{
	font-size:22px;
	font-weight:500;
	text-transform:capitalize;
}
.weather-details{
	position:absolute;
	bottom:40px;
	left:0;
	width:100%;
	padding:0 20px;
	display: flex;
}
.weather-details .humidity,
.weather-details .wind {
	display: flex;
	align-items:center;
	width:50%;
	transform:translateY(-100%);
	
}
.weather-details.active .humidity,
.weather-details.active .wind {
	transform:translateY(0%);
	transition: transform 1s ease;
	transition-delay:1.2s;
	
}
.weather-details .humidity .info-humidity,
.weather-details .wind .info-wind {
	transform: translateY(-100%);
	overflow:hidden;
	
	
}
.weather-details .humidity {
	padding-left:20px;
	justify-content:flex-start;
}
.weather-details .wind{
	padding-right:20px;
	justify-content:flex-end;
	
}
.weather-details i{
	font-size:56px;
	margin-right:10px;
	
}
.weather-details span{
	display:inline-block;
	font-size:22px;
	font-weight:500;
}
.weather-details p {
	font-size:14px;
	font-weight:500;
}
.not-found {
	position:absolute;
	top:0;
	left:0;
	width:100%;
	text-align:center;
	margin-top:110px;
	
}
.not-found img{
	width:65%;
}
.not-found{
	font-size:22px;
	font-weight: 500;
	margin-top:12px;
	
}
.city-hide{
	display:none;
}
#Clone-info-weather,
#Clone-info-humidity,
#Clone-info-wind{
	position: absolute;
	transform: translateY(-100%);
	
	
}
##Clone-info-weather .weather{
	transform:translateY(120%);
	transition:transform 1s ease, opacity 0s;
	transition-delay: 0s, 2s;
	
}
.weather-box:not(.active) #clone-info-weather .weather{
	opacity:0;
	transition-delay: 0s;
	
	
}
.active-clone#clone-info-weather .weather{
	transform: translateY(0%);
	
}
#Clone-info-humidity span,
#clone-info-wind span {
	transform: translateY(100%);
	transition: transform 1s ease;
}
.active-clone#Clone-info-humidity span,
.active-clone#clone-info-wind span {
transform:translateY(0%);
}